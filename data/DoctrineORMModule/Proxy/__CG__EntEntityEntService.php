<?php

namespace DoctrineORMModule\Proxy\__CG__\Ent\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EntService extends \Ent\Entity\EntService implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceId', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceName', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceLibelle', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceDescription', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceLastUpdate', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'fkCsContact', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'fkSaAttribute');
        }

        return array('__isInitialized__', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceId', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceName', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceLibelle', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceDescription', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'serviceLastUpdate', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'fkCsContact', '' . "\0" . 'Ent\\Entity\\EntService' . "\0" . 'fkSaAttribute');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EntService $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getServiceId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getServiceId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceId', array());

        return parent::getServiceId();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceName($serviceName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceName', array($serviceName));

        return parent::setServiceName($serviceName);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceName', array());

        return parent::getServiceName();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceLibelle($serviceLibelle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceLibelle', array($serviceLibelle));

        return parent::setServiceLibelle($serviceLibelle);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceLibelle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceLibelle', array());

        return parent::getServiceLibelle();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceDescription($serviceDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceDescription', array($serviceDescription));

        return parent::setServiceDescription($serviceDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceDescription', array());

        return parent::getServiceDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceLastUpdate($serviceLastUpdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceLastUpdate', array($serviceLastUpdate));

        return parent::setServiceLastUpdate($serviceLastUpdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceLastUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceLastUpdate', array());

        return parent::getServiceLastUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function addFkCsContact(\Doctrine\Common\Collections\Collection $fkCsContact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFkCsContact', array($fkCsContact));

        return parent::addFkCsContact($fkCsContact);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFkCsContact(\Doctrine\Common\Collections\Collection $fkCsContact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFkCsContact', array($fkCsContact));

        return parent::removeFkCsContact($fkCsContact);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkCsContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkCsContact', array());

        return parent::getFkCsContact();
    }

    /**
     * {@inheritDoc}
     */
    public function addFkSaAttribute(\Doctrine\Common\Collections\Collection $fkSaAttribute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFkSaAttribute', array($fkSaAttribute));

        return parent::addFkSaAttribute($fkSaAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFkSaAttribute(\Doctrine\Common\Collections\Collection $fkSaAttribute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFkSaAttribute', array($fkSaAttribute));

        return parent::removeFkSaAttribute($fkSaAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkSaAttribute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkSaAttribute', array());

        return parent::getFkSaAttribute();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray($hydrator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array($hydrator));

        return parent::toArray($hydrator);
    }

}
